parameters:
  stageName: ''
  environment: ''
  dependentStageName: ''
  artifact: ''

stages:
- stage: ${{ parameters.stageName }}
  dependsOn: ${{ parameters.dependentStageName }}
  condition: succeeded('${{ parameters.dependentStageName }}')
  jobs:
  - job: Build

    pool: $(AGENT_POOL)
    variables:
    - group: '${{ parameters.environment }} Environment Variables'

    - name: TF_TEMPLATE_WORKING_DIR
      value: '$(System.DefaultWorkingDirectory)/${{ parameters.artifact }}/$(TF_TEMPLATE_ROOT_DIR)'
    
    workspace:
      clean: all

    steps:
    - checkout: none
    - download: none
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Build Artifacts'
      inputs:
        artifactName: ${{ parameters.artifact }}
        downloadPath: '$(System.DefaultWorkingDirectory)'
    - task: AzureCLI@1
      displayName: 'Create Terraform Workspace'
      inputs:
        azureSubscription: '$(SERVICE_CONNECTION_NAME)'
        scriptPath: './${{ parameters.artifact }}/$(PIPELINE_ROOT_DIR)/$(SCRIPTS_DIR)/tf-create-workspace.sh'
        addSpnToEnvironment: true
        workingDirectory: '$(System.DefaultWorkingDirectory)'
      env:
        TF_VAR_remote_state_account: $(REMOTE_STATE_ACCOUNT)
        TF_VAR_remote_state_container: $(REMOTE_STATE_CONTAINER)

    - task: AzureCLI@1
      displayName: 'Create Terraform Execution Plan'
      inputs:
        azureSubscription: '$(SERVICE_CONNECTION_NAME)'
        scriptPath: './${{ parameters.artifact }}/$(PIPELINE_ROOT_DIR)/$(SCRIPTS_DIR)/tf-generate-plan.sh'
        addSpnToEnvironment: true
        workingDirectory: '$(System.DefaultWorkingDirectory)'
      env:
        TF_VAR_remote_state_container: $(REMOTE_STATE_CONTAINER)
        TF_VAR_remote_state_account: $(REMOTE_STATE_ACCOUNT)
        TF_VAR_app_dev_subscription_id: $(APP_DEV_SUBSCRIPTION_ID)
        TF_VAR_ase_name: $(ASE_NAME)
        TF_VAR_name: $(APP_PREFIX)
        TF_VAR_ase_resource_group: $(ASE_RESOURCE_GROUP)
        TF_VAR_ase_subscription_id: $(ARM_SUBSCRIPTION_ID)
        TF_VAR_ase_vnet_name: $(ASE_VNET_NAME)
        TF_VAR_resource_group_location: $(DATACENTER_LOCATION)

    - task: CopyFiles@2
      displayName: Copy Build Directory to Artifact Directory
      inputs:
        contents: '**'
        sourceFolder: '$(System.DefaultWorkingDirectory)/${{ parameters.artifact }}'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      inputs:
        parallel: true
        parallelCount: 8
        artifactName: '$(BUILD_ARTIFACT_NAME)-$(TF_WORKSPACE_NAME)'
        pathToPublish: $(Build.ArtifactStagingDirectory)