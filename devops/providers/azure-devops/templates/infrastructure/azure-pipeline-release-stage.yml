parameters:
  environment: ''
  enablePrIsolation: true
  resourceNameIsolationLevel: 8
  configurationMatrix: []
  forceRun: false
  skipTests: false

jobs:

- job: TemplateChangeDetection
  pool: $(AGENT_POOL)
  variables:
  - group: '${{ parameters.environment }} Environment Variables'
  displayName: Determine CD Targets to Run
  condition: not(coalesce(variables.FORCE_RUN, ${{ parameters.forceRun }}))
  steps:
  - ${{ each config in parameters.configurationMatrix }}:
    - template: scripts/set-cicd-flag.yml
      parameters:
        terraformTemplatePath: ${{ config.terraformTemplatePath }}
        jobName: ${{ config.jobName }}

- ${{ each config in parameters.configurationMatrix }}:
  - job: Provision_${{ config.jobName }}_${{ parameters.environment }}_ComputeWs
    dependsOn: TemplateChangeDetection
    pool: $(AGENT_POOL)
    condition: or(coalesce(variables.FORCE_RUN, ${{ parameters.forceRun }}), eq(dependencies.TemplateChangeDetection.outputs['${{ config.jobName }}.needs_cicd'], 'true'))
    
    steps:
    - template: scripts/compute-workspace.yml
      parameters:
        terraformWorkspacePrefix: ${{ config.terraformWorkspacePrefix }}
        environmentName: ${{ parameters.environment }}
        enablePrIsolation: ${{ parameters.enablePrIsolation }}
        stepName: ComputeWs

  - deployment: Provision_${{ config.jobName }}_${{ parameters.environment }}
    dependsOn: Provision_${{ config.jobName }}_${{ parameters.environment }}_ComputeWs
    pool: $(AGENT_POOL)

    ${{ if config.deploymentTimeoutInMinutes }}:
      timeoutInMinutes: '${{ config.deploymentTimeoutInMinutes }}'

    variables:
    - group: '${{ parameters.environment }} Environment Variables'

    - name: TF_WORKSPACE_NAME
      value: $[ dependencies.Provision_${{ config.jobName }}_${{ parameters.environment }}_ComputeWs.outputs['ComputeWs.TF_WORKSPACE_NAME'] ]

    - name: RELEASE_ARTIFACT_NAME
      value: $(BUILD_ARTIFACT_NAME)-$(TF_WORKSPACE_NAME)

    - name: ARTIFACT_ROOT
      value: '$(System.DefaultWorkingDirectory)/$(RELEASE_ARTIFACT_NAME)'

    - name: TERRAFORM_TEMPLATE_PATH
      value: ${{ config.terraformTemplatePath }}

    - name: TF_TEMPLATE_WORKING_DIR
      value: '$(System.DefaultWorkingDirectory)/$(RELEASE_ARTIFACT_NAME)/${{ config.terraformTemplatePath }}'

    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
          - download: none
          - task: DownloadBuildArtifacts@0
            displayName: 'Download Build Artifacts'
            inputs:
              artifactName: '$(RELEASE_ARTIFACT_NAME)'
              downloadPath: '$(System.DefaultWorkingDirectory)'
          - task: GoTool@0
            displayName: 'Verify Go Version is Installed'
            inputs:
              version: '$(GO_VERSION)'

          - template: scripts/tf-create-workspace.yml

          - template: scripts/tf-apply-plan.yml

          - template: scripts/test-integration.yml
            parameters:
              skip: ${{ parameters.skipTests }}

          - ${{ if containsValue(config.environmentsToTeardownAfterRelease, parameters.environment) }}:
            - template: scripts/tf-destroy.yml
